package main

type Parser Peg {
    Tokenizer
}

program   <- cell+
cell      <- space* (list / atom) space*
list      <- '('                          { p.Begin() }
             cell+
             ')'                          { p.End() }
atom      <- bool / int / str / nil / symbol
bool      <- < 'true' / 'false' >         { p.PushBool(text) }
int       <- < [1-9] [0-9]* / [0] >       { p.PushInt(text) }
str       <- '"' < ([^"\\] / '\\')* > '"' { p.PushStr(text) }
nil       <- 'nil'                        { p.PushNil() }
symbol    <- < (!delimiter .)+ >          { p.PushSymbol(text) }
space     <- ' ' / '\n'
paren     <- '(' / ')'
delimiter <- paren / space
